<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.njtu.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="edu.njtu.model.User" >
    <id column="user_id_int" property="userIdInt" jdbcType="BIGINT" />
    <id column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="average_stars" property="averageStars" jdbcType="DOUBLE" />
    <result column="compliments_cool" property="complimentsCool" jdbcType="INTEGER" />
    <result column="compliments_cute" property="complimentsCute" jdbcType="INTEGER" />
    <result column="compliments_funny" property="complimentsFunny" jdbcType="INTEGER" />
    <result column="compliments_hot" property="complimentsHot" jdbcType="INTEGER" />
    <result column="compliments_list" property="complimentsList" jdbcType="INTEGER" />
    <result column="compliments_more" property="complimentsMore" jdbcType="INTEGER" />
    <result column="compliments_note" property="complimentsNote" jdbcType="INTEGER" />
    <result column="compliments_photos" property="complimentsPhotos" jdbcType="INTEGER" />
    <result column="compliments_plain" property="complimentsPlain" jdbcType="INTEGER" />
    <result column="compliments_profile" property="complimentsProfile" jdbcType="INTEGER" />
    <result column="compliments_writer" property="complimentsWriter" jdbcType="INTEGER" />
    <result column="fans" property="fans" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="review_count" property="reviewCount" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="votes_cool" property="votesCool" jdbcType="INTEGER" />
    <result column="votes_funny" property="votesFunny" jdbcType="INTEGER" />
    <result column="votes_useful" property="votesUseful" jdbcType="INTEGER" />
    <result column="yelping_since" property="yelpingSince" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id_int, user_id, average_stars, compliments_cool, compliments_cute, compliments_funny, 
    compliments_hot, compliments_list, compliments_more, compliments_note, compliments_photos, 
    compliments_plain, compliments_profile, compliments_writer, fans, name, review_count, 
    type, votes_cool, votes_funny, votes_useful, yelping_since
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.njtu.model.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="edu.njtu.model.UserKey" >
    select 
    <include refid="Base_Column_List" />
    from users
    where user_id_int = #{userIdInt,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="edu.njtu.model.UserKey" >
    delete from users
    where user_id_int = #{userIdInt,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="edu.njtu.model.UserExample" >
    delete from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.njtu.model.User" >
    insert into users (user_id_int, user_id, average_stars, 
      compliments_cool, compliments_cute, compliments_funny, 
      compliments_hot, compliments_list, compliments_more, 
      compliments_note, compliments_photos, compliments_plain, 
      compliments_profile, compliments_writer, 
      fans, name, review_count, 
      type, votes_cool, votes_funny, 
      votes_useful, yelping_since)
    values (#{userIdInt,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{averageStars,jdbcType=DOUBLE}, 
      #{complimentsCool,jdbcType=INTEGER}, #{complimentsCute,jdbcType=INTEGER}, #{complimentsFunny,jdbcType=INTEGER}, 
      #{complimentsHot,jdbcType=INTEGER}, #{complimentsList,jdbcType=INTEGER}, #{complimentsMore,jdbcType=INTEGER}, 
      #{complimentsNote,jdbcType=INTEGER}, #{complimentsPhotos,jdbcType=INTEGER}, #{complimentsPlain,jdbcType=INTEGER}, 
      #{complimentsProfile,jdbcType=INTEGER}, #{complimentsWriter,jdbcType=INTEGER}, 
      #{fans,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{reviewCount,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{votesCool,jdbcType=INTEGER}, #{votesFunny,jdbcType=INTEGER}, 
      #{votesUseful,jdbcType=INTEGER}, #{yelpingSince,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.njtu.model.User" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userIdInt != null" >
        user_id_int,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="averageStars != null" >
        average_stars,
      </if>
      <if test="complimentsCool != null" >
        compliments_cool,
      </if>
      <if test="complimentsCute != null" >
        compliments_cute,
      </if>
      <if test="complimentsFunny != null" >
        compliments_funny,
      </if>
      <if test="complimentsHot != null" >
        compliments_hot,
      </if>
      <if test="complimentsList != null" >
        compliments_list,
      </if>
      <if test="complimentsMore != null" >
        compliments_more,
      </if>
      <if test="complimentsNote != null" >
        compliments_note,
      </if>
      <if test="complimentsPhotos != null" >
        compliments_photos,
      </if>
      <if test="complimentsPlain != null" >
        compliments_plain,
      </if>
      <if test="complimentsProfile != null" >
        compliments_profile,
      </if>
      <if test="complimentsWriter != null" >
        compliments_writer,
      </if>
      <if test="fans != null" >
        fans,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="reviewCount != null" >
        review_count,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="votesCool != null" >
        votes_cool,
      </if>
      <if test="votesFunny != null" >
        votes_funny,
      </if>
      <if test="votesUseful != null" >
        votes_useful,
      </if>
      <if test="yelpingSince != null" >
        yelping_since,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userIdInt != null" >
        #{userIdInt,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="averageStars != null" >
        #{averageStars,jdbcType=DOUBLE},
      </if>
      <if test="complimentsCool != null" >
        #{complimentsCool,jdbcType=INTEGER},
      </if>
      <if test="complimentsCute != null" >
        #{complimentsCute,jdbcType=INTEGER},
      </if>
      <if test="complimentsFunny != null" >
        #{complimentsFunny,jdbcType=INTEGER},
      </if>
      <if test="complimentsHot != null" >
        #{complimentsHot,jdbcType=INTEGER},
      </if>
      <if test="complimentsList != null" >
        #{complimentsList,jdbcType=INTEGER},
      </if>
      <if test="complimentsMore != null" >
        #{complimentsMore,jdbcType=INTEGER},
      </if>
      <if test="complimentsNote != null" >
        #{complimentsNote,jdbcType=INTEGER},
      </if>
      <if test="complimentsPhotos != null" >
        #{complimentsPhotos,jdbcType=INTEGER},
      </if>
      <if test="complimentsPlain != null" >
        #{complimentsPlain,jdbcType=INTEGER},
      </if>
      <if test="complimentsProfile != null" >
        #{complimentsProfile,jdbcType=INTEGER},
      </if>
      <if test="complimentsWriter != null" >
        #{complimentsWriter,jdbcType=INTEGER},
      </if>
      <if test="fans != null" >
        #{fans,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="reviewCount != null" >
        #{reviewCount,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="votesCool != null" >
        #{votesCool,jdbcType=INTEGER},
      </if>
      <if test="votesFunny != null" >
        #{votesFunny,jdbcType=INTEGER},
      </if>
      <if test="votesUseful != null" >
        #{votesUseful,jdbcType=INTEGER},
      </if>
      <if test="yelpingSince != null" >
        #{yelpingSince,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.njtu.model.UserExample" resultType="java.lang.Integer" >
    select count(*) from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update users
    <set >
      <if test="record.userIdInt != null" >
        user_id_int = #{record.userIdInt,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.averageStars != null" >
        average_stars = #{record.averageStars,jdbcType=DOUBLE},
      </if>
      <if test="record.complimentsCool != null" >
        compliments_cool = #{record.complimentsCool,jdbcType=INTEGER},
      </if>
      <if test="record.complimentsCute != null" >
        compliments_cute = #{record.complimentsCute,jdbcType=INTEGER},
      </if>
      <if test="record.complimentsFunny != null" >
        compliments_funny = #{record.complimentsFunny,jdbcType=INTEGER},
      </if>
      <if test="record.complimentsHot != null" >
        compliments_hot = #{record.complimentsHot,jdbcType=INTEGER},
      </if>
      <if test="record.complimentsList != null" >
        compliments_list = #{record.complimentsList,jdbcType=INTEGER},
      </if>
      <if test="record.complimentsMore != null" >
        compliments_more = #{record.complimentsMore,jdbcType=INTEGER},
      </if>
      <if test="record.complimentsNote != null" >
        compliments_note = #{record.complimentsNote,jdbcType=INTEGER},
      </if>
      <if test="record.complimentsPhotos != null" >
        compliments_photos = #{record.complimentsPhotos,jdbcType=INTEGER},
      </if>
      <if test="record.complimentsPlain != null" >
        compliments_plain = #{record.complimentsPlain,jdbcType=INTEGER},
      </if>
      <if test="record.complimentsProfile != null" >
        compliments_profile = #{record.complimentsProfile,jdbcType=INTEGER},
      </if>
      <if test="record.complimentsWriter != null" >
        compliments_writer = #{record.complimentsWriter,jdbcType=INTEGER},
      </if>
      <if test="record.fans != null" >
        fans = #{record.fans,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewCount != null" >
        review_count = #{record.reviewCount,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.votesCool != null" >
        votes_cool = #{record.votesCool,jdbcType=INTEGER},
      </if>
      <if test="record.votesFunny != null" >
        votes_funny = #{record.votesFunny,jdbcType=INTEGER},
      </if>
      <if test="record.votesUseful != null" >
        votes_useful = #{record.votesUseful,jdbcType=INTEGER},
      </if>
      <if test="record.yelpingSince != null" >
        yelping_since = #{record.yelpingSince,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update users
    set user_id_int = #{record.userIdInt,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=VARCHAR},
      average_stars = #{record.averageStars,jdbcType=DOUBLE},
      compliments_cool = #{record.complimentsCool,jdbcType=INTEGER},
      compliments_cute = #{record.complimentsCute,jdbcType=INTEGER},
      compliments_funny = #{record.complimentsFunny,jdbcType=INTEGER},
      compliments_hot = #{record.complimentsHot,jdbcType=INTEGER},
      compliments_list = #{record.complimentsList,jdbcType=INTEGER},
      compliments_more = #{record.complimentsMore,jdbcType=INTEGER},
      compliments_note = #{record.complimentsNote,jdbcType=INTEGER},
      compliments_photos = #{record.complimentsPhotos,jdbcType=INTEGER},
      compliments_plain = #{record.complimentsPlain,jdbcType=INTEGER},
      compliments_profile = #{record.complimentsProfile,jdbcType=INTEGER},
      compliments_writer = #{record.complimentsWriter,jdbcType=INTEGER},
      fans = #{record.fans,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      review_count = #{record.reviewCount,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      votes_cool = #{record.votesCool,jdbcType=INTEGER},
      votes_funny = #{record.votesFunny,jdbcType=INTEGER},
      votes_useful = #{record.votesUseful,jdbcType=INTEGER},
      yelping_since = #{record.yelpingSince,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.njtu.model.User" >
    update users
    <set >
      <if test="averageStars != null" >
        average_stars = #{averageStars,jdbcType=DOUBLE},
      </if>
      <if test="complimentsCool != null" >
        compliments_cool = #{complimentsCool,jdbcType=INTEGER},
      </if>
      <if test="complimentsCute != null" >
        compliments_cute = #{complimentsCute,jdbcType=INTEGER},
      </if>
      <if test="complimentsFunny != null" >
        compliments_funny = #{complimentsFunny,jdbcType=INTEGER},
      </if>
      <if test="complimentsHot != null" >
        compliments_hot = #{complimentsHot,jdbcType=INTEGER},
      </if>
      <if test="complimentsList != null" >
        compliments_list = #{complimentsList,jdbcType=INTEGER},
      </if>
      <if test="complimentsMore != null" >
        compliments_more = #{complimentsMore,jdbcType=INTEGER},
      </if>
      <if test="complimentsNote != null" >
        compliments_note = #{complimentsNote,jdbcType=INTEGER},
      </if>
      <if test="complimentsPhotos != null" >
        compliments_photos = #{complimentsPhotos,jdbcType=INTEGER},
      </if>
      <if test="complimentsPlain != null" >
        compliments_plain = #{complimentsPlain,jdbcType=INTEGER},
      </if>
      <if test="complimentsProfile != null" >
        compliments_profile = #{complimentsProfile,jdbcType=INTEGER},
      </if>
      <if test="complimentsWriter != null" >
        compliments_writer = #{complimentsWriter,jdbcType=INTEGER},
      </if>
      <if test="fans != null" >
        fans = #{fans,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="reviewCount != null" >
        review_count = #{reviewCount,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="votesCool != null" >
        votes_cool = #{votesCool,jdbcType=INTEGER},
      </if>
      <if test="votesFunny != null" >
        votes_funny = #{votesFunny,jdbcType=INTEGER},
      </if>
      <if test="votesUseful != null" >
        votes_useful = #{votesUseful,jdbcType=INTEGER},
      </if>
      <if test="yelpingSince != null" >
        yelping_since = #{yelpingSince,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id_int = #{userIdInt,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.njtu.model.User" >
    update users
    set average_stars = #{averageStars,jdbcType=DOUBLE},
      compliments_cool = #{complimentsCool,jdbcType=INTEGER},
      compliments_cute = #{complimentsCute,jdbcType=INTEGER},
      compliments_funny = #{complimentsFunny,jdbcType=INTEGER},
      compliments_hot = #{complimentsHot,jdbcType=INTEGER},
      compliments_list = #{complimentsList,jdbcType=INTEGER},
      compliments_more = #{complimentsMore,jdbcType=INTEGER},
      compliments_note = #{complimentsNote,jdbcType=INTEGER},
      compliments_photos = #{complimentsPhotos,jdbcType=INTEGER},
      compliments_plain = #{complimentsPlain,jdbcType=INTEGER},
      compliments_profile = #{complimentsProfile,jdbcType=INTEGER},
      compliments_writer = #{complimentsWriter,jdbcType=INTEGER},
      fans = #{fans,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      review_count = #{reviewCount,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      votes_cool = #{votesCool,jdbcType=INTEGER},
      votes_funny = #{votesFunny,jdbcType=INTEGER},
      votes_useful = #{votesUseful,jdbcType=INTEGER},
      yelping_since = #{yelpingSince,jdbcType=VARCHAR}
    where user_id_int = #{userIdInt,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>