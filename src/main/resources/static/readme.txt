1.json数据格式化
2.实体类变更(补充)




|-- attributes: struct (nullable = true)
|    |-- Accepts Credit Cards: boolean (nullable = true)
|    |-- Accepts Insurance: boolean (nullable = true)
|    |-- Ages Allowed: string (nullable = true)
|    |-- Alcohol: string (nullable = true)
|    |-- Ambience: struct (nullable = true)
|    |    |-- casual: boolean (nullable = true)
|    |    |-- classy: boolean (nullable = true)
|    |    |-- divey: boolean (nullable = true)
|    |    |-- hipster: boolean (nullable = true)
|    |    |-- intimate: boolean (nullable = true)
|    |    |-- romantic: boolean (nullable = true)
|    |    |-- touristy: boolean (nullable = true)
|    |    |-- trendy: boolean (nullable = true)
|    |    |-- upscale: boolean (nullable = true)
|    |-- Attire: string (nullable = true)
|    |-- BYOB: boolean (nullable = true)
|    |-- BYOB/Corkage: string (nullable = true)
|    |-- By Appointment Only: boolean (nullable = true)
|    |-- Caters: boolean (nullable = true)
|    |-- Coat Check: boolean (nullable = true)
|    |-- Corkage: boolean (nullable = true)
|    |-- Delivery: boolean (nullable = true)
|    |-- Dietary Restrictions: struct (nullable = true)
|    |    |-- dairy-free: boolean (nullable = true)
|    |    |-- gluten-free: boolean (nullable = true)
|    |    |-- halal: boolean (nullable = true)
|    |    |-- kosher: boolean (nullable = true)
|    |    |-- soy-free: boolean (nullable = true)
|    |    |-- vegan: boolean (nullable = true)
|    |    |-- vegetarian: boolean (nullable = true)
|    |-- Dogs Allowed: boolean (nullable = true)
|    |-- Drive-Thru: boolean (nullable = true)
|    |-- Good For: struct (nullable = true)
|    |    |-- breakfast: boolean (nullable = true)
|    |    |-- brunch: boolean (nullable = true)
|    |    |-- dessert: boolean (nullable = true)
|    |    |-- dinner: boolean (nullable = true)
|    |    |-- latenight: boolean (nullable = true)
|    |    |-- lunch: boolean (nullable = true)
|    |-- Good For Dancing: boolean (nullable = true)
|    |-- Good For Groups: boolean (nullable = true)
|    |-- Good for Kids: boolean (nullable = true)
|    |-- Hair Types Specialized In: struct (nullable = true)
|    |    |-- africanamerican: boolean (nullable = true)
|    |    |-- asian: boolean (nullable = true)
|    |    |-- coloring: boolean (nullable = true)
|    |    |-- curly: boolean (nullable = true)
|    |    |-- extensions: boolean (nullable = true)
|    |    |-- kids: boolean (nullable = true)
|    |    |-- perms: boolean (nullable = true)
|    |    |-- straightperms: boolean (nullable = true)
|    |-- Happy Hour: boolean (nullable = true)
|    |-- Has TV: boolean (nullable = true)
|    |-- Music: struct (nullable = true)
|    |    |-- background_music: boolean (nullable = true)
|    |    |-- dj: boolean (nullable = true)
|    |    |-- jukebox: boolean (nullable = true)
|    |    |-- karaoke: boolean (nullable = true)
|    |    |-- live: boolean (nullable = true)
|    |    |-- video: boolean (nullable = true)
|    |-- Noise Level: string (nullable = true)
|    |-- Open 24 Hours: boolean (nullable = true)
|    |-- Order at Counter: boolean (nullable = true)
|    |-- Outdoor Seating: boolean (nullable = true)
|    |-- Parking: struct (nullable = true)
|    |    |-- garage: boolean (nullable = true)
|    |    |-- lot: boolean (nullable = true)
|    |    |-- street: boolean (nullable = true)
|    |    |-- valet: boolean (nullable = true)
|    |    |-- validated: boolean (nullable = true)
|    |-- Price Range: long (nullable = true)
|    |-- Smoking: string (nullable = true)
|    |-- Take-out: boolean (nullable = true)
|    |-- Takes Reservations: boolean (nullable = true)
|    |-- Waiter Service: boolean (nullable = true)
|    |-- Wheelchair Accessible: boolean (nullable = true)
|    |-- Wi-Fi: string (nullable = true)

|-- business_id: string (nullable = true)
|-- categories: array (nullable = true)
|    |-- element: string (containsNull = true)
|-- city: string (nullable = true)
|-- full_address: string (nullable = true)
|-- hours: struct (nullable = true)
|    |-- Friday: struct (nullable = true)
|    |    |-- close: string (nullable = true)
|    |    |-- open: string (nullable = true)
|    |-- Monday: struct (nullable = true)
|    |    |-- close: string (nullable = true)
|    |    |-- open: string (nullable = true)
|    |-- Saturday: struct (nullable = true)
|    |    |-- close: string (nullable = true)
|    |    |-- open: string (nullable = true)
|    |-- Sunday: struct (nullable = true)
|    |    |-- close: string (nullable = true)
|    |    |-- open: string (nullable = true)
|    |-- Thursday: struct (nullable = true)
|    |    |-- close: string (nullable = true)
|    |    |-- open: string (nullable = true)
|    |-- Tuesday: struct (nullable = true)
|    |    |-- close: string (nullable = true)
|    |    |-- open: string (nullable = true)
|    |-- Wednesday: struct (nullable = true)
|    |    |-- close: string (nullable = true)
|    |    |-- open: string (nullable = true)
|-- latitude: double (nullable = true)
|-- longitude: double (nullable = true)
|-- name: string (nullable = true)
|-- neighborhoods: array (nullable = true)
|    |-- element: string (containsNull = true)
|-- open: boolean (nullable = true)
|-- review_count: long (nullable = true)
|-- stars: double (nullable = true)
|-- state: string (nullable = true)
|-- type: string (nullable = true)

{"attributes":{"acceptsCreditCards":true,"goodForGroups":true,"goodForKids":true,"parking":{"garage":false,"lot":false,"street":false,"valet":false,"validated":false},"takesReservations":true}}

StructType structType = new StructType()
                .add("attributes", new StructType()
                        .add("Accepts Credit Cards", DataTypes.BooleanType)
                        .add("Accepts Insurance", DataTypes.BooleanType)
                        .add("Ages Allowed", DataTypes.BooleanType)
                        .add("Alcohol", DataTypes.BooleanType)
                        .add("Ambience", new StructType()
                            .add("casual",DataTypes.BooleanType)
                            .add("classy",DataTypes.BooleanType)
                            .add("divey",DataTypes.BooleanType)
                            .add("hipster",DataTypes.BooleanType)
                            .add("intimate",DataTypes.BooleanType)
                            .add("romantic",DataTypes.BooleanType)
                            .add("touristy",DataTypes.BooleanType)
                            .add("trendy",DataTypes.BooleanType)
                            .add("upscale",DataTypes.BooleanType))
                        .add("Attire", DataTypes.BooleanType)
                        .add("BYOB", DataTypes.BooleanType)
                        .add("BYOB/Corkage", DataTypes.BooleanType)
                        .add("By Appointment Only", DataTypes.BooleanType)
                        .add("Caters", DataTypes.BooleanType)
                        .add("Coat Check", DataTypes.BooleanType)
                        .add("Corkage", DataTypes.BooleanType)
                        .add("Delivery", DataTypes.BooleanType)
                        .add("Dietary Restrictions",  new StructType()
                                .add("dairy-free",DataTypes.BooleanType)
                                .add("gluten-free",DataTypes.BooleanType)
                                .add("halal",DataTypes.BooleanType)
                                .add("kosher",DataTypes.BooleanType)
                                .add("soy-free",DataTypes.BooleanType)
                                .add("vegan",DataTypes.BooleanType)
                                .add("vegetarian",DataTypes.BooleanType))
                        .add("Dogs Allowed", DataTypes.BooleanType)
                        .add("Drive-Thru", DataTypes.BooleanType)
                        .add("Good For", new StructType()
                                .add("breakfast",DataTypes.BooleanType)
                                .add("brunch",DataTypes.BooleanType)
                                .add("dessert",DataTypes.BooleanType)
                                .add("dinner",DataTypes.BooleanType)
                                .add("latenight",DataTypes.BooleanType)
                                .add("lunch",DataTypes.BooleanType))
                        .add("Good For Dancing", DataTypes.BooleanType)
                        .add("Good For Groups", DataTypes.BooleanType)
                        .add("Good for Kids", DataTypes.BooleanType)
                        .add("Hair Types Specialized In", new StructType()
                                .add("africanamerican",DataTypes.BooleanType)
                                .add("asian",DataTypes.BooleanType)
                                .add("coloring",DataTypes.BooleanType)
                                .add("curly",DataTypes.BooleanType)
                                .add("extensions",DataTypes.BooleanType)
                                .add("kids",DataTypes.BooleanType)
                                .add("perms",DataTypes.BooleanType)
                                .add("straightperms",DataTypes.BooleanType))
                        .add("Happy Hour", DataTypes.BooleanType)
                        .add("Happy Hour", DataTypes.BooleanType)
                        .add("Has TV", DataTypes.BooleanType)
                        .add("Music", new StructType()
                                .add("background_music",DataTypes.BooleanType)
                                .add("dj",DataTypes.BooleanType)
                                .add("jukebox",DataTypes.BooleanType)
                                .add("karaoke",DataTypes.BooleanType)
                                .add("live",DataTypes.BooleanType)
                                .add("video",DataTypes.BooleanType))
                        .add("Noise Level", DataTypes.BooleanType)
                        .add("Open 24 Hours", DataTypes.BooleanType)
                        .add("Order at Counter", DataTypes.BooleanType)
                        .add("Outdoor Seating", DataTypes.BooleanType)
                        .add("Parking", new StructType()
                                .add("garage",DataTypes.BooleanType)
                                .add("lot",DataTypes.BooleanType)
                                .add("street",DataTypes.BooleanType)
                                .add("valet",DataTypes.BooleanType)
                                .add("validated",DataTypes.BooleanType))
                        .add("Price Range", DataTypes.BooleanType)
                        .add("Smoking", DataTypes.BooleanType)
                        .add("Take-out", DataTypes.BooleanType)
                        .add("Takes Reservations", DataTypes.BooleanType)
                        .add("Waiter Service", DataTypes.BooleanType)
                        .add("Wheelchair Accessible", DataTypes.BooleanType)
                        .add("Wi-Fi", DataTypes.BooleanType));



StructType structType2 = new StructType()
                .add("attributes", new StructType()
                        .add("acceptsCreditCards", DataTypes.BooleanType)
                        .add("acceptsInsurance", DataTypes.BooleanType)
                        .add("agesAllowed", DataTypes.BooleanType)
                        .add("alcohol", DataTypes.BooleanType)
                        .add("ambience", new StructType()
                                .add("casual",DataTypes.BooleanType)
                                .add("classy",DataTypes.BooleanType)
                                .add("divey",DataTypes.BooleanType)
                                .add("hipster",DataTypes.BooleanType)
                                .add("intimate",DataTypes.BooleanType)
                                .add("romantic",DataTypes.BooleanType)
                                .add("touristy",DataTypes.BooleanType)
                                .add("trendy",DataTypes.BooleanType)
                                .add("upscale",DataTypes.BooleanType))
                        .add("attire", DataTypes.BooleanType)
                        .add("byob", DataTypes.BooleanType)
                        .add("byobCorkage", DataTypes.BooleanType)
                        .add("byAppointmentOnly", DataTypes.BooleanType)
                        .add("caters", DataTypes.BooleanType)
                        .add("coatCheck", DataTypes.BooleanType)
                        .add("corkage", DataTypes.BooleanType)
                        .add("delivery", DataTypes.BooleanType)
                        .add("dietaryRestrictions",  new StructType()
                                .add("dairyFree",DataTypes.BooleanType)
                                .add("glutenFree",DataTypes.BooleanType)
                                .add("halal",DataTypes.BooleanType)
                                .add("kosher",DataTypes.BooleanType)
                                .add("soyFree",DataTypes.BooleanType)
                                .add("vegan",DataTypes.BooleanType)
                                .add("vegetarian",DataTypes.BooleanType))
                        .add("dogsAllowed", DataTypes.BooleanType)
                        .add("driveThru", DataTypes.BooleanType)
                        .add("goodFor", new StructType()
                                .add("breakfast",DataTypes.BooleanType)
                                .add("brunch",DataTypes.BooleanType)
                                .add("dessert",DataTypes.BooleanType)
                                .add("dinner",DataTypes.BooleanType)
                                .add("latenight",DataTypes.BooleanType)
                                .add("lunch",DataTypes.BooleanType))
                        .add("goodForDancing", DataTypes.BooleanType)
                        .add("goodForGroups", DataTypes.BooleanType)
                        .add("goodForKids", DataTypes.BooleanType)
                        .add("gairTypesSpecializedIn", new StructType()
                                .add("africanamerican",DataTypes.BooleanType)
                                .add("asian",DataTypes.BooleanType)
                                .add("coloring",DataTypes.BooleanType)
                                .add("curly",DataTypes.BooleanType)
                                .add("extensions",DataTypes.BooleanType)
                                .add("kids",DataTypes.BooleanType)
                                .add("perms",DataTypes.BooleanType)
                                .add("straightperms",DataTypes.BooleanType))
                                .add("Happy Hour", DataTypes.BooleanType)
                        .add("happyHour", DataTypes.BooleanType)
                        .add("hasTV", DataTypes.BooleanType)
                        .add("music", new StructType()
                                .add("backgroundMusic",DataTypes.BooleanType)
                                .add("dj",DataTypes.BooleanType)
                                .add("jukebox",DataTypes.BooleanType)
                                .add("karaoke",DataTypes.BooleanType)
                                .add("live",DataTypes.BooleanType)
                                .add("video",DataTypes.BooleanType))
                        .add("noiseLevel", DataTypes.BooleanType)
                        .add("open24Hours", DataTypes.BooleanType)
                        .add("orderAtCounter", DataTypes.BooleanType)
                        .add("outdoorSeating", DataTypes.BooleanType)
                        .add("parking", new StructType()
                                .add("garage",DataTypes.BooleanType)
                                .add("lot",DataTypes.BooleanType)
                                .add("street",DataTypes.BooleanType)
                                .add("valet",DataTypes.BooleanType)
                                .add("validated",DataTypes.BooleanType))
                        .add("priceRange", DataTypes.BooleanType)
                        .add("smoking", DataTypes.BooleanType)
                        .add("takeOut", DataTypes.BooleanType)
                        .add("takesReservations", DataTypes.BooleanType)
                        .add("waiterService", DataTypes.BooleanType)
                        .add("wheelchairAccessible", DataTypes.BooleanType)
                        .add("wifi", DataTypes.BooleanType));